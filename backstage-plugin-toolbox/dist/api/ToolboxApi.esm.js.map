{"version":3,"file":"ToolboxApi.esm.js","sources":["../../src/api/ToolboxApi.ts"],"sourcesContent":["import { createApiRef } from '@backstage/core-plugin-api';\n\nexport type ToolRequest = typeof globalThis extends { onmessage: any }\n  ? {\n      method?: string;\n      headers?: Record<string, string>;\n      body?:\n        | string\n        | ArrayBuffer\n        | ArrayBufferView\n        | Blob\n        | FormData\n        | URLSearchParams\n        | ReadableStream<Uint8Array>\n        | null;\n    }\n  : import('undici-types').RequestInit;\nexport type ToolResponse = typeof globalThis extends { onmessage: any }\n  ? {\n      readonly status: number;\n      readonly statusText: string;\n      readonly ok: boolean;\n      readonly json: () => Promise<unknown>;\n      readonly text: () => Promise<string>;\n      readonly arrayBuffer: () => Promise<ArrayBuffer>;\n    }\n  : import('undici-types').Response;\n\nexport interface ToolboxApi {\n  getBackendTools(): Promise<string[]>;\n\n  toolRequest(toolName: string, request: ToolRequest): Promise<ToolResponse>;\n\n  toolJsonRequest(toolName: string, data: any): Promise<unknown>;\n}\n\nexport const toolboxApiRef = createApiRef<ToolboxApi>({\n  id: 'plugin.toolbox.service',\n});\n"],"names":[],"mappings":";;AAoCO,MAAM,gBAAgB,YAAyB,CAAA;AAAA,EACpD,EAAI,EAAA,wBAAA;AACN,CAAC;;;;"}