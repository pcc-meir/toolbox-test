{"version":3,"file":"ToolboxClient.esm.js","sources":["../../src/api/ToolboxClient.ts"],"sourcesContent":["import { ToolboxApi, ToolRequest, ToolResponse } from './ToolboxApi';\nimport { DiscoveryApi, FetchApi } from '@backstage/core-plugin-api';\n\nexport class ToolboxClient implements ToolboxApi {\n  private readonly fetchApi: FetchApi;\n  private readonly discoveryApi: DiscoveryApi;\n\n  constructor(options: { fetchApi: FetchApi; discoveryApi: DiscoveryApi }) {\n    this.fetchApi = options.fetchApi;\n    this.discoveryApi = options.discoveryApi;\n  }\n\n  async getBaseUrl(): Promise<string> {\n    return this.discoveryApi.getBaseUrl('toolbox');\n  }\n\n  async getBackendTools(): Promise<string[]> {\n    const url = `${await this.getBaseUrl()}/tools`;\n    try {\n      const response = await this.fetchApi.fetch(url);\n      const data = await response.json();\n      return data.tools;\n    } catch (error) {\n      return [];\n    }\n  }\n\n  async toolRequest(\n    toolName: string,\n    request: ToolRequest,\n  ): Promise<ToolResponse> {\n    const url = `${await this.getBaseUrl()}/${toolName}`;\n    const response = await this.fetchApi.fetch(url, request);\n    if (response.ok) {\n      return response;\n    }\n    throw new Error(`Request failed with status ${response.status}`);\n  }\n\n  async toolJsonRequest(toolName: string, data: any): Promise<unknown> {\n    const request: ToolRequest = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    };\n    const response = await this.toolRequest(toolName, request);\n    return response.json();\n  }\n}\n"],"names":[],"mappings":"AAGO,MAAM,aAAoC,CAAA;AAAA,EAC9B,QAAA,CAAA;AAAA,EACA,YAAA,CAAA;AAAA,EAEjB,YAAY,OAA6D,EAAA;AACvE,IAAA,IAAA,CAAK,WAAW,OAAQ,CAAA,QAAA,CAAA;AACxB,IAAA,IAAA,CAAK,eAAe,OAAQ,CAAA,YAAA,CAAA;AAAA,GAC9B;AAAA,EAEA,MAAM,UAA8B,GAAA;AAClC,IAAO,OAAA,IAAA,CAAK,YAAa,CAAA,UAAA,CAAW,SAAS,CAAA,CAAA;AAAA,GAC/C;AAAA,EAEA,MAAM,eAAqC,GAAA;AACzC,IAAA,MAAM,GAAM,GAAA,CAAA,EAAG,MAAM,IAAA,CAAK,YAAY,CAAA,MAAA,CAAA,CAAA;AACtC,IAAI,IAAA;AACF,MAAA,MAAM,QAAW,GAAA,MAAM,IAAK,CAAA,QAAA,CAAS,MAAM,GAAG,CAAA,CAAA;AAC9C,MAAM,MAAA,IAAA,GAAO,MAAM,QAAA,CAAS,IAAK,EAAA,CAAA;AACjC,MAAA,OAAO,IAAK,CAAA,KAAA,CAAA;AAAA,aACL,KAAO,EAAA;AACd,MAAA,OAAO,EAAC,CAAA;AAAA,KACV;AAAA,GACF;AAAA,EAEA,MAAM,WACJ,CAAA,QAAA,EACA,OACuB,EAAA;AACvB,IAAA,MAAM,MAAM,CAAG,EAAA,MAAM,KAAK,UAAW,EAAC,IAAI,QAAQ,CAAA,CAAA,CAAA;AAClD,IAAA,MAAM,WAAW,MAAM,IAAA,CAAK,QAAS,CAAA,KAAA,CAAM,KAAK,OAAO,CAAA,CAAA;AACvD,IAAA,IAAI,SAAS,EAAI,EAAA;AACf,MAAO,OAAA,QAAA,CAAA;AAAA,KACT;AACA,IAAA,MAAM,IAAI,KAAA,CAAM,CAA8B,2BAAA,EAAA,QAAA,CAAS,MAAM,CAAE,CAAA,CAAA,CAAA;AAAA,GACjE;AAAA,EAEA,MAAM,eAAgB,CAAA,QAAA,EAAkB,IAA6B,EAAA;AACnE,IAAA,MAAM,OAAuB,GAAA;AAAA,MAC3B,MAAQ,EAAA,MAAA;AAAA,MACR,OAAS,EAAA;AAAA,QACP,cAAgB,EAAA,kBAAA;AAAA,OAClB;AAAA,MACA,IAAA,EAAM,IAAK,CAAA,SAAA,CAAU,IAAI,CAAA;AAAA,KAC3B,CAAA;AACA,IAAA,MAAM,QAAW,GAAA,MAAM,IAAK,CAAA,WAAA,CAAY,UAAU,OAAO,CAAA,CAAA;AACzD,IAAA,OAAO,SAAS,IAAK,EAAA,CAAA;AAAA,GACvB;AACF;;;;"}