{"version":3,"file":"Countdown.esm.js","sources":["../../../src/components/Misc/Countdown.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useStyles } from '../../utils/hooks';\nimport { TimePaper } from './TimePaper';\nimport FormControl from '@mui/material/FormControl';\nimport Grid from '@mui/material/Grid';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Button from '@mui/material/Button';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport TextField from '@mui/material/TextField';\nimport { useToolboxTranslation } from '../../hooks';\n\nfunction sleep(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nconst audioContext = new AudioContext();\nconst beep = (frequency: number) => {\n  const beep_decay = 1.5;\n  const o = audioContext.createOscillator();\n  const g = audioContext.createGain();\n  o.connect(g);\n  o.type = 'sine';\n  o.frequency.value = frequency;\n  g.connect(audioContext.destination);\n  o.start();\n  g.gain.exponentialRampToValueAtTime(\n    0.00001,\n    audioContext.currentTime + beep_decay,\n  );\n};\n\nasync function playAlert() {\n  beep(440.0);\n  await sleep(200);\n  beep(440.0);\n  await sleep(200);\n  beep(440.0);\n}\n\nconst Countdown = () => {\n  const [secondsLeft, setSecondsLeft] = useState(0);\n  const [hours, setHours] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const { classes } = useStyles();\n  const [isRunning, setIsRunning] = useState(false);\n  const [chime, setChime] = useState(true);\n  const { t } = useToolboxTranslation();\n\n  const formatTime = (timeInSeconds: number) => {\n    const hoursLeft = Math.floor(timeInSeconds / 3600);\n    const minutesLeft = Math.floor((timeInSeconds / 60) % 60);\n    const secondsL = Math.floor(timeInSeconds % 60);\n    return { hours: hoursLeft, minutes: minutesLeft, seconds: secondsL };\n  };\n\n  const handleStart = () => {\n    const time = hours * 3600 + minutes * 60 + seconds - 1;\n    if (time > 0) {\n      setSecondsLeft(time);\n      setIsRunning(true);\n    }\n  };\n\n  const handleStop = () => {\n    setIsRunning(false);\n  };\n\n  const handleReset = () => {\n    if (isRunning) {\n      const time = hours * 3600 + minutes * 60 + seconds - 1;\n      setSecondsLeft(time);\n    } else {\n      setHours(0);\n      setMinutes(0);\n      setSeconds(0);\n    }\n  };\n\n  const handleChimeToggle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setChime(event.target.checked);\n  };\n\n  useEffect(() => {\n    let intervalId: any;\n\n    if (isRunning) {\n      intervalId = setInterval(() => {\n        const time = secondsLeft - 1;\n        if (time > 0) {\n          setSecondsLeft(time);\n        } else if (time <= 0) {\n          setIsRunning(false);\n          if (chime) {\n            playAlert();\n          }\n        }\n      }, 1000);\n    }\n\n    return () => clearInterval(intervalId);\n  }, [hours, minutes, seconds, secondsLeft, isRunning, chime]);\n\n  const timeLeft = formatTime(secondsLeft);\n  return (\n    <>\n      <FormControl className={classes.fullWidth}>\n        <Grid container spacing={4} style={{ marginBottom: '5px' }}>\n          <Grid item>\n            <ButtonGroup\n              sx={{\n                p: '16px !important',\n                pl: '0 !important',\n                pt: '0 !important',\n              }}\n            >\n              {!isRunning && (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleStart}\n                >\n                  {t('tool.countdown.startButton')}\n                </Button>\n              )}\n              {isRunning && (\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={handleStop}\n                >\n                  {t('tool.countdown.stopButton')}\n                </Button>\n              )}\n              <Button\n                variant=\"contained\"\n                onClick={handleReset}\n                sx={{\n                  backgroundColor: '#E0E0E0',\n                  color: '#000000 !important',\n                  '&:hover': {\n                    backgroundColor: '#E0E0E0',\n                  },\n                }}\n              >\n                {t('tool.countdown.resetButton')}\n              </Button>\n            </ButtonGroup>\n            <FormControlLabel\n              control={<Switch defaultChecked onChange={handleChimeToggle} />}\n              label=\"Chime\"\n              labelPlacement=\"start\"\n            />\n          </Grid>\n        </Grid>\n      </FormControl>\n      {!isRunning && (\n        <Grid container spacing={4}>\n          <Grid item>\n            <TextField\n              label={t('tool.countdown.hoursLabel')}\n              type=\"number\"\n              value={hours}\n              variant=\"standard\"\n              onChange={e => {\n                const val = parseInt(e.target.value, 10);\n                if (!isNaN(val)) {\n                  setHours(val);\n                }\n              }}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              label={t('tool.countdown.minutesLabel')}\n              type=\"number\"\n              value={minutes}\n              variant=\"standard\"\n              onChange={e => {\n                const val = parseInt(e.target.value, 10);\n                if (!isNaN(val)) {\n                  setMinutes(val);\n                }\n              }}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              label={t('tool.countdown.secondsLabel')}\n              type=\"number\"\n              value={seconds}\n              variant=\"standard\"\n              onChange={e => {\n                const val = parseInt(e.target.value, 10);\n                if (!isNaN(val)) {\n                  setSeconds(val);\n                }\n              }}\n            />\n          </Grid>\n        </Grid>\n      )}\n      {isRunning && (\n        <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\n          <Grid item>\n            <TimePaper\n              value={timeLeft.hours}\n              title={t('tool.countdown.hoursLabel')}\n            />\n          </Grid>\n          <Grid item>\n            <TimePaper\n              value={timeLeft.minutes}\n              title={t('tool.countdown.minutesLabel')}\n            />\n          </Grid>\n          <Grid item>\n            <TimePaper\n              value={timeLeft.seconds}\n              title={t('tool.countdown.secondsLabel')}\n            />\n          </Grid>\n        </Grid>\n      )}\n    </>\n  );\n};\n\nexport default Countdown;\n"],"names":[],"mappings":"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"}