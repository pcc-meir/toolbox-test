{"version":3,"file":"Diff.esm.js","sources":["../../../src/components/Misc/Diff.tsx"],"sourcesContent":["import { DiffEditor, loader } from '@monaco-editor/react';\nimport * as monaco from 'monaco-editor';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useStyles } from '../../utils/hooks';\nimport useEffectOnce from 'react-use/lib/useEffectOnce';\nimport { Select, SelectItem } from '@backstage/core-components';\n\nimport {\n  ClearValueButton,\n  CopyToClipboardButton,\n  FileUploadButton,\n  PasteFromClipboardButton,\n} from '../Buttons';\nimport Input from '@mui/icons-material/Input';\nimport { appThemeApiRef, useApi } from '@backstage/core-plugin-api';\nimport Tooltip from '@mui/material/Tooltip';\nimport Button from '@mui/material/Button';\nimport FormControl from '@mui/material/FormControl';\nimport Grid from '@mui/material/Grid';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport { useToolboxTranslation } from '../../hooks';\n\nloader.config({ monaco });\n\nexport type MonacoLanguages = { name: string; extensions: string[] };\n\ntype SampleButtonProps = {\n  sample: string[];\n  setInput: (input: string[]) => void;\n};\n\nconst options: monaco.editor.IDiffEditorConstructionOptions = {\n  originalEditable: true,\n  diffCodeLens: true,\n  dragAndDrop: true,\n  tabCompletion: 'on',\n  renderSideBySide: true,\n};\n\nfunction getLanguage(allowedLanguages: MonacoLanguages[], extension: string) {\n  return allowedLanguages.find(monacoLanguage =>\n    monacoLanguage.extensions.includes(extension as string),\n  )?.name;\n}\n\nfunction readFileAndSetText(\n  file: File | undefined,\n  setText: (value: ((prevState: string) => string) | string) => void,\n  setLanguage: (value: ((prevState: string) => string) | string) => void,\n  allowedLanguages: MonacoLanguages[],\n) {\n  if (!file) {\n    return;\n  }\n\n  const reader = new FileReader();\n  reader.onload = async e => {\n    // @ts-ignore\n    setText(e.target.result);\n  };\n  reader.readAsText(file);\n  let newLanguage = 'plaintext';\n  const extension = `.${file.name.split('.').pop()}`;\n  if (allowedLanguages?.length) {\n    newLanguage = getLanguage(allowedLanguages, extension) || newLanguage;\n  }\n  setLanguage(newLanguage);\n}\n\nexport const SampleButton = (props: SampleButtonProps) => {\n  const { sample, setInput } = props;\n  const { t } = useToolboxTranslation();\n  return (\n    <Tooltip arrow title={t('components.sampleButton.tooltipTitle')}>\n      <Button\n        size=\"small\"\n        startIcon={<Input />}\n        onClick={() => setInput(sample)}\n        color=\"inherit\"\n      >\n        {t('components.sampleButton.buttonText')}\n      </Button>\n    </Tooltip>\n  );\n};\n\nfunction Diff() {\n  const { classes } = useStyles();\n  const appThemeApi = useApi(appThemeApiRef);\n  const theme = useMemo(\n    () => appThemeApi.getActiveThemeId() ?? 'light',\n    [appThemeApi],\n  );\n  const [originalFile, setOriginalFile] = useState<File>();\n  const [modifiedFile, setModifiedFile] = useState<File>();\n\n  const [originalText, setOriginalText] = useState('');\n  const [modifiedText, setModifiedText] = useState('');\n\n  const [language, setLanguage] = useState('plaintext');\n  const [allowedLanguages, setAllowedLanguages] = useState<MonacoLanguages[]>(\n    [],\n  );\n  const { t } = useToolboxTranslation();\n\n  const exampleOriginalText = 'Backstage toolbox\\n\\ncompare text';\n  const exampleModifiedText = 'Backstage toolbox\\ndiff editor';\n  const handleLanguageSelect = (selected: any) => {\n    setLanguage(selected);\n  };\n\n  useEffect(() => {\n    readFileAndSetText(\n      modifiedFile,\n      setModifiedText,\n      setLanguage,\n      allowedLanguages,\n    );\n  }, [modifiedFile, allowedLanguages]);\n\n  useEffect(() => {\n    readFileAndSetText(\n      originalFile,\n      setOriginalText,\n      setLanguage,\n      allowedLanguages,\n    );\n  }, [originalFile, allowedLanguages]);\n\n  useEffectOnce(() => {\n    const languages: MonacoLanguages[] = monaco.languages\n      .getLanguages()\n      .map(each => {\n        return { name: each.id, extensions: each.extensions || [] };\n      });\n    setAllowedLanguages(languages);\n  });\n\n  const languageOptions: SelectItem[] = allowedLanguages\n    ? allowedLanguages.map(i => ({ label: i.name, value: i.name }))\n    : [{ label: t('tool.diff.loadingLabel'), value: 'loading' }];\n\n  return (\n    <>\n      <FormControl className={classes.fullWidth}>\n        <Grid container style={{ width: '100%' }}>\n          <Grid item style={{ minWidth: '200px' }}>\n            <Select\n              selected={language}\n              onChange={handleLanguageSelect}\n              items={languageOptions}\n              label={t('tool.diff.selectLanguage')}\n            />\n          </Grid>\n        </Grid>\n        <Grid container style={{ width: '100%' }}>\n          <Grid item>\n            {exampleOriginalText && exampleModifiedText && (\n              <SampleButton\n                setInput={input => {\n                  setOriginalText(input[0]);\n                  setModifiedText(input[1]);\n                }}\n                sample={[exampleOriginalText, exampleModifiedText]}\n              />\n            )}\n          </Grid>\n        </Grid>\n        <Grid container style={{ marginBottom: '5px', width: '100%' }}>\n          <Grid item style={{ width: '50%' }}>\n            <ButtonGroup size=\"small\">\n              <FileUploadButton\n                onFileLoad={setOriginalFile}\n                id=\"originalFile\"\n                buttonText={t('tool.diff.originalFileUploadButton')}\n              />\n              <ClearValueButton setValue={setOriginalText} />\n              <PasteFromClipboardButton setInput={setOriginalText} />\n              {originalText && <CopyToClipboardButton output={originalText} />}\n            </ButtonGroup>\n          </Grid>\n          <Grid item style={{ width: '50%' }}>\n            <ButtonGroup size=\"small\">\n              <FileUploadButton\n                onFileLoad={setModifiedFile}\n                id=\"modifiedFile\"\n                buttonText={t('tool.diff.modifiedFileUploadButton')}\n              />\n              <ClearValueButton setValue={setModifiedText} />\n              <PasteFromClipboardButton setInput={setModifiedText} />\n              {modifiedText && <CopyToClipboardButton output={modifiedText} />}\n            </ButtonGroup>\n          </Grid>\n        </Grid>\n        <DiffEditor\n          height=\"100vh\"\n          original={originalText}\n          theme={theme.includes('dark') ? 'vs-dark' : 'vs-light'}\n          modified={modifiedText}\n          options={options}\n          language={language}\n        />\n      </FormControl>\n    </>\n  );\n}\n\nexport default Diff;\n"],"names":[],"mappings":"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"}