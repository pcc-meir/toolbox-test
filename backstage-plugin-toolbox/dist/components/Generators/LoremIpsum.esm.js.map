{"version":3,"file":"LoremIpsum.esm.js","sources":["../../../src/components/Generators/LoremIpsum.tsx"],"sourcesContent":["import React from 'react';\nimport { useStyles } from '../../utils/hooks';\nimport { faker } from '@faker-js/faker';\nimport { lowerCase, upperFirst } from 'lodash';\nimport { ClearValueButton, CopyToClipboardButton } from '../Buttons';\nimport Button from '@mui/material/Button';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport Grid from '@mui/material/Grid';\nimport MenuItem from '@mui/material/MenuItem';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport { useToolboxTranslation } from '../../hooks';\n\nconst randomInt = (min: number, max: number) => {\n  return Math.floor(Math.random() * max) + min;\n};\n\nexport const LoremIpsum = () => {\n  const { classes } = useStyles();\n  const [output, setOutput] = React.useState('');\n  const [multiplier, setMultiplier] = React.useState(1);\n\n  const generate = (type: string) => {\n    let outputs = [];\n    switch (type) {\n      default:\n      case 'line':\n        outputs = faker.lorem.lines(multiplier).split('\\n');\n        break;\n      case 'paragraph':\n        outputs = faker.lorem.paragraphs(multiplier, '\\n').split('\\n');\n        break;\n      case 'slug':\n        outputs = faker.lorem.slug(multiplier).split('\\n');\n        break;\n      case 'word':\n        outputs = faker.lorem.words(multiplier).split('\\n');\n        break;\n      case 'hack':\n        outputs = [...Array(multiplier)].map(faker.hacker.phrase);\n        break;\n      case 'hex':\n        outputs = [...Array(multiplier)].map(() =>\n          faker.string.hexadecimal({\n            length: randomInt(1, 50),\n            casing: 'lower',\n          }),\n        );\n        break;\n      case 'datetime':\n        outputs = [...Array(multiplier)].map(faker.date.anytime);\n        break;\n      case 'number':\n        outputs = [...Array(multiplier)].map(() =>\n          faker.number.int({ min: 1, max: 100000000000000000 }),\n        );\n        break;\n      case 'string':\n        outputs = [...Array(multiplier)].map(() =>\n          faker.string.sample(randomInt(10, 100)),\n        );\n        break;\n      case 'uuid':\n        outputs = [...Array(multiplier)].map(faker.string.uuid);\n        break;\n      case 'ipv4':\n        outputs = [...Array(multiplier)].map(faker.internet.ipv4);\n        break;\n      case 'ipv6':\n        outputs = [...Array(multiplier)].map(faker.internet.ipv6);\n        break;\n      case 'mac':\n        outputs = [...Array(multiplier)].map(faker.internet.mac);\n        break;\n      case 'domain':\n        outputs = [...Array(multiplier)].map(faker.internet.domainName);\n        break;\n      case 'password':\n        outputs = [...Array(multiplier)].map(() =>\n          faker.internet.password({\n            length: randomInt(10, 100),\n            memorable: false,\n          }),\n        );\n        break;\n      case 'url':\n        outputs = [...Array(multiplier)].map(faker.internet.url);\n        break;\n      case 'user-agent':\n        outputs = [...Array(multiplier)].map(faker.internet.userAgent);\n        break;\n      case 'imei':\n        outputs = [...Array(multiplier)].map(faker.phone.imei);\n        break;\n      case 'cron':\n        outputs = [...Array(multiplier)].map(faker.system.cron);\n        break;\n      case 'emoji':\n        outputs = [...Array(multiplier)].map(faker.internet.emoji);\n        break;\n      case 'address':\n        outputs = [...Array(multiplier)].map(\n          () =>\n            `${faker.location.streetAddress(\n              true,\n            )}, ${faker.location.zipCode()} ${faker.location.city()}, ${faker.location.country()}`,\n        );\n        break;\n      case 'product-name':\n        outputs = [...Array(multiplier)].map(faker.commerce.productName);\n        break;\n      case 'product-description':\n        outputs = [...Array(multiplier)].map(faker.commerce.productDescription);\n        break;\n      case 'catch-phrase':\n        outputs = [...Array(multiplier)].map(faker.company.catchPhrase);\n        break;\n      case 'bic':\n        outputs = [...Array(multiplier)].map(faker.finance.bic);\n        break;\n      case 'credit-card':\n        outputs = [...Array(multiplier)].map(faker.finance.creditCardNumber);\n        break;\n      case 'iban':\n        outputs = [...Array(multiplier)].map(() =>\n          faker.finance.iban({ formatted: true }),\n        );\n        break;\n      case 'song':\n        outputs = [...Array(multiplier)].map(faker.music.songName);\n        break;\n      case 'name':\n        outputs = [...Array(multiplier)].map(faker.person.fullName);\n        break;\n      case 'job-title':\n        outputs = [...Array(multiplier)].map(faker.person.jobTitle);\n        break;\n    }\n    setOutput(outputs.join('\\n'));\n  };\n\n  const GenerateButton = (props: { type: string; title?: string }) => {\n    const { t } = useToolboxTranslation();\n    const title = props.title ? props.title : upperFirst(lowerCase(props.type));\n    const translatedTitle = t(\n      `tool.lorem-ipsum-generate.button.${props.type.toLowerCase()}`,\n      { defaultValue: title },\n    );\n    return (\n      <Button\n        size=\"small\"\n        variant=\"outlined\"\n        onClick={() => generate(props.type)}\n        color=\"inherit\"\n        sx={{\n          px: '16px',\n          borderColor: 'textVerySubtle',\n          borderRadius: '4px !important',\n        }}\n      >\n        {translatedTitle}\n      </Button>\n    );\n  };\n\n  return (\n    <>\n      <FormControl className={classes.fullWidth}>\n        <Grid container style={{ marginBottom: '5px' }}>\n          <Grid item>\n            <InputLabel id=\"multiplier-label\">Count</InputLabel>\n            <Box sx={{ ml: '16px ' }}>\n              <Select\n                style={{ minWidth: '100px' }}\n                labelId=\"multiplier-label\"\n                value={multiplier.toString(10)}\n                onChange={e =>\n                  setMultiplier(Number.parseInt(e.target.value as string, 10))\n                }\n                variant=\"standard\"\n              >\n                <MenuItem value={1}>1</MenuItem>\n                <MenuItem value={5}>5</MenuItem>\n                <MenuItem value={10}>10</MenuItem>\n                <MenuItem value={25}>25</MenuItem>\n                <MenuItem value={50}>50</MenuItem>\n                <MenuItem value={100}>100</MenuItem>\n                <MenuItem value={250}>250</MenuItem>\n                <MenuItem value={500}>500</MenuItem>\n                <MenuItem value={1000}>1000</MenuItem>\n              </Select>\n              <ButtonGroup className={classes.editorButtonGroup}>\n                <ClearValueButton setValue={setOutput} tooltip=\"Clear output\" />\n                <CopyToClipboardButton output={output} />\n              </ButtonGroup>\n            </Box>\n            <ButtonGroup className={classes.editorButtonGroup}>\n              <GenerateButton type=\"line\" />\n              <GenerateButton type=\"paragraph\" />\n              <GenerateButton type=\"slug\" />\n              <GenerateButton type=\"word\" />\n              <GenerateButton type=\"hack\" />\n            </ButtonGroup>\n            <ButtonGroup className={classes.editorButtonGroup}>\n              <GenerateButton type=\"hex\" />\n              <GenerateButton type=\"datetime\" />\n              <GenerateButton type=\"number\" />\n              <GenerateButton type=\"string\" />\n              <GenerateButton type=\"uuid\" />\n            </ButtonGroup>\n            <ButtonGroup className={classes.editorButtonGroup}>\n              <GenerateButton type=\"ipv4\" title=\"IPv4\" />\n              <GenerateButton type=\"ipv6\" title=\"IPv6\" />\n              <GenerateButton type=\"mac\" title=\"MAC\" />\n              <GenerateButton type=\"imei\" />\n              <GenerateButton type=\"cron\" />\n            </ButtonGroup>\n            <ButtonGroup className={classes.editorButtonGroup}>\n              <GenerateButton type=\"domain\" />\n              <GenerateButton type=\"password\" />\n              <GenerateButton type=\"url\" title=\"URL\" />\n              <GenerateButton type=\"user-agent\" title=\"User agent\" />\n              <GenerateButton type=\"emoji\" />\n            </ButtonGroup>\n            <ButtonGroup className={classes.editorButtonGroup}>\n              <GenerateButton type=\"address\" />\n              <GenerateButton type=\"name\" title=\"Name\" />\n              <GenerateButton type=\"job-title\" title=\"Job title\" />\n            </ButtonGroup>\n            <ButtonGroup className={classes.editorButtonGroup}>\n              <GenerateButton type=\"product-name\" title=\"Product name\" />\n              <GenerateButton\n                type=\"product-description\"\n                title=\"Product description\"\n              />\n              <GenerateButton type=\"catch-phrase\" title=\"Catch phrase\" />\n              <GenerateButton type=\"song\" title=\"Song name\" />\n            </ButtonGroup>\n            <ButtonGroup className={classes.editorButtonGroup}>\n              <GenerateButton type=\"bic\" title=\"BIC\" />\n              <GenerateButton type=\"credit-card\" title=\"Credit card\" />\n              <GenerateButton type=\"iban\" title=\"IBAN\" />\n            </ButtonGroup>\n          </Grid>\n          <Grid item className={classes.fullWidth}>\n            <TextField\n              id=\"output\"\n              label=\"Output\"\n              value={output || ''}\n              className={classes.fullWidth}\n              multiline\n              minRows={20}\n              maxRows={50}\n              variant=\"outlined\"\n            />\n          </Grid>\n        </Grid>\n      </FormControl>\n    </>\n  );\n};\n\nexport default LoremIpsum;\n"],"names":[],"mappings":"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"}