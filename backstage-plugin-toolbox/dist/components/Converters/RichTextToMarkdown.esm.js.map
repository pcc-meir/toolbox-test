{"version":3,"file":"RichTextToMarkdown.esm.js","sources":["../../../src/components/Converters/RichTextToMarkdown.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport TurndownService from 'turndown';\nimport { DefaultEditor } from '../DefaultEditor';\nimport { MarkdownContent } from '@backstage/core-components';\nimport { useStyles } from '../../utils/hooks';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport { useToolboxTranslation } from '../../hooks';\n\n// this library has no types available\nconst { gfm } = require('turndown-plugin-gfm') as {\n  gfm: TurndownService.Plugin;\n};\n\nexport const RichTextToMarkdown = () => {\n  const { classes } = useStyles();\n  const [input, setInput] = React.useState('');\n  const [output, setOutput] = React.useState('');\n  const { t } = useToolboxTranslation();\n\n  const sample = '<h1>Hello world</h1><p>This is some content</p>';\n\n  useEffect(() => {\n    const turndownService = new TurndownService({\n      headingStyle: 'atx',\n      codeBlockStyle: 'fenced',\n    });\n    turndownService.use(gfm);\n    setOutput(turndownService.turndown(input));\n  }, [input]);\n\n  return (\n    <DefaultEditor\n      input={input}\n      setInput={setInput}\n      output={output}\n      sample={sample}\n      allowFileUpload\n      acceptFileTypes=\".html,.htm,.txt\"\n      allowFileDownload\n      downloadFileName=\"download.md\"\n      downloadFileType=\"text/markdown\"\n      extraRightContent={\n        <>\n          {output && (\n            <Paper\n              elevation={0}\n              className={classes.previewPaper}\n              style={{ marginTop: '1rem' }}\n            >\n              <Typography variant=\"subtitle1\">\n                {t('tool.rich-text-to-markdown-convert.preview')}:\n              </Typography>\n              <MarkdownContent content={output} />\n            </Paper>\n          )}\n        </>\n      }\n    />\n  );\n};\n\nexport default RichTextToMarkdown;\n"],"names":[],"mappings":";;;;;;;;;AAUA,MAAM,EAAE,GAAA,EAAQ,GAAA,OAAA,CAAQ,qBAAqB,CAAA,CAAA;AAItC,MAAM,qBAAqB,MAAM;AACtC,EAAM,MAAA,EAAE,OAAQ,EAAA,GAAI,SAAU,EAAA,CAAA;AAC9B,EAAA,MAAM,CAAC,KAAO,EAAA,QAAQ,CAAI,GAAA,KAAA,CAAM,SAAS,EAAE,CAAA,CAAA;AAC3C,EAAA,MAAM,CAAC,MAAQ,EAAA,SAAS,CAAI,GAAA,KAAA,CAAM,SAAS,EAAE,CAAA,CAAA;AAC7C,EAAM,MAAA,EAAE,CAAE,EAAA,GAAI,qBAAsB,EAAA,CAAA;AAEpC,EAAA,MAAM,MAAS,GAAA,iDAAA,CAAA;AAEf,EAAA,SAAA,CAAU,MAAM;AACd,IAAM,MAAA,eAAA,GAAkB,IAAI,eAAgB,CAAA;AAAA,MAC1C,YAAc,EAAA,KAAA;AAAA,MACd,cAAgB,EAAA,QAAA;AAAA,KACjB,CAAA,CAAA;AACD,IAAA,eAAA,CAAgB,IAAI,GAAG,CAAA,CAAA;AACvB,IAAU,SAAA,CAAA,eAAA,CAAgB,QAAS,CAAA,KAAK,CAAC,CAAA,CAAA;AAAA,GAC3C,EAAG,CAAC,KAAK,CAAC,CAAA,CAAA;AAEV,EACE,uBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,aAAA;AAAA,IAAA;AAAA,MACC,KAAA;AAAA,MACA,QAAA;AAAA,MACA,MAAA;AAAA,MACA,MAAA;AAAA,MACA,eAAe,EAAA,IAAA;AAAA,MACf,eAAgB,EAAA,iBAAA;AAAA,MAChB,iBAAiB,EAAA,IAAA;AAAA,MACjB,gBAAiB,EAAA,aAAA;AAAA,MACjB,gBAAiB,EAAA,eAAA;AAAA,MACjB,iBAAA,4DAEK,MACC,oBAAA,KAAA,CAAA,aAAA;AAAA,QAAC,KAAA;AAAA,QAAA;AAAA,UACC,SAAW,EAAA,CAAA;AAAA,UACX,WAAW,OAAQ,CAAA,YAAA;AAAA,UACnB,KAAA,EAAO,EAAE,SAAA,EAAW,MAAO,EAAA;AAAA,SAAA;AAAA,4CAE1B,UAAW,EAAA,EAAA,OAAA,EAAQ,eACjB,CAAE,CAAA,4CAA4C,GAAE,GACnD,CAAA;AAAA,wBACA,KAAA,CAAA,aAAA,CAAC,eAAgB,EAAA,EAAA,OAAA,EAAS,MAAQ,EAAA,CAAA;AAAA,OAGxC,CAAA;AAAA,KAAA;AAAA,GAEJ,CAAA;AAEJ;;;;"}