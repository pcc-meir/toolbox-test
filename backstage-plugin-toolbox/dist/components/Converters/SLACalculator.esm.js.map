{"version":3,"file":"SLACalculator.esm.js","sources":["../../../src/components/Converters/SLACalculator.tsx"],"sourcesContent":["import { useStyles } from '../../utils/hooks';\nimport React from 'react';\nimport {\n  ClearValueButton,\n  CopyToClipboardButton,\n  PasteFromClipboardButton,\n  SampleButton,\n} from '../Buttons';\nimport TextField from '@mui/material/TextField';\nimport FormControl from '@mui/material/FormControl';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport Alert from '@mui/material/Alert';\nimport { useToolboxTranslation } from '../../hooks';\n\nexport const SLACalculator = () => {\n  const { classes } = useStyles();\n  const [input, setInput] = React.useState('');\n  const [output, setOutput] = React.useState({\n    daily: '',\n    weekly: '',\n    monthly: '',\n    quarterly: '',\n    yearly: '',\n  });\n  const [error, setError] = React.useState({\n    show: false,\n    msg: '',\n  });\n  const { t } = useToolboxTranslation();\n\n  const convertTime = (value: number) => {\n    let minutes = Math.floor(value / 60);\n    const seconds = Math.floor(value % 60);\n    if (minutes >= 60) {\n      const hours = Math.floor(minutes / 60);\n      minutes = minutes % 60;\n      return `${hours}h ${minutes}m ${seconds}s`;\n    }\n\n    return `${minutes}m ${seconds}s`;\n  };\n\n  const isValidFloat = (value: string) => {\n    return /^\\d+(\\.\\d*)?$/.test(value);\n  };\n\n  const handleChange = (value: string) => {\n    if (value.length === 0) {\n      setInput('');\n      setOutput({\n        daily: '',\n        weekly: '',\n        monthly: '',\n        quarterly: '',\n        yearly: '',\n      });\n      return;\n    }\n\n    if (!isValidFloat(value)) {\n      setError({ show: true, msg: t('tool.sla-calculator.invalidFormat') });\n      return;\n    }\n    setInput(value);\n    setError({ show: false, msg: '' });\n\n    let base = parseFloat(value);\n    if (base > 100) {\n      setError({ show: true, msg: t('tool.sla-calculator.maxValueError') });\n      base = 100;\n      setInput('100');\n    }\n\n    const daily = (24 - (base * 24) / 100) * 60 * 60;\n\n    setOutput({\n      daily: convertTime(daily),\n      weekly: convertTime(daily * 7),\n      monthly: convertTime(daily * 30),\n      quarterly: convertTime(daily * 91),\n      yearly: convertTime(daily * 365),\n    });\n  };\n\n  const OutputField = (props: { label: string; value?: string | null }) => {\n    const { label, value } = props;\n    return (\n      <>\n        <TextField\n          label={label}\n          style={{ marginTop: '1rem' }}\n          className={classes.fullWidth}\n          disabled\n          value={value ?? ''}\n        />\n        <CopyToClipboardButton output={value ?? ''} />\n      </>\n    );\n  };\n\n  return (\n    <>\n      <FormControl className={classes.fullWidth}>\n        <Grid container>\n          <Grid item xs={12} lg={8}>\n            <Typography variant=\"subtitle1\">\n              <PasteFromClipboardButton setInput={v => handleChange(v)} />\n              <ClearValueButton\n                setValue={() => {\n                  handleChange('');\n                  setError({ show: false, msg: '' });\n                }}\n              />\n              <SampleButton setInput={handleChange} sample=\"99.9\" />\n            </Typography>\n            <TextField\n              className={classes.fullWidth}\n              id=\"input\"\n              label={t('tool.sla-calculator.inputLabel')}\n              name=\"input\"\n              value={input}\n              onChange={e => handleChange(e.target.value)}\n              variant=\"outlined\"\n            />\n            {error.show ? <Alert severity=\"error\">{error.msg}</Alert> : null}\n          </Grid>\n        </Grid>\n        <Divider style={{ marginTop: '1rem', marginBottom: '1rem' }} />\n        <Grid container>\n          <Grid item lg={5} md={8} xs={12}>\n            <OutputField\n              label={t('tool.sla-calculator.dailyLabel')}\n              value={output.daily}\n            />\n            <OutputField\n              label={t('tool.sla-calculator.weeklyLabel')}\n              value={output.weekly}\n            />\n            <OutputField\n              label={t('tool.sla-calculator.monthlyLabel')}\n              value={output.monthly}\n            />\n            <OutputField\n              label={t('tool.sla-calculator.quarterlyLabel')}\n              value={output.quarterly}\n            />\n            <OutputField\n              label={t('tool.sla-calculator.yearlyLabel')}\n              value={output.yearly}\n            />\n          </Grid>\n        </Grid>\n      </FormControl>\n    </>\n  );\n};\n\nexport default SLACalculator;\n\n// Only float values are supported!\n"],"names":[],"mappings":"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"}