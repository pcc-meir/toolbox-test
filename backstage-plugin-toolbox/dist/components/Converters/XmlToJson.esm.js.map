{"version":3,"file":"XmlToJson.esm.js","sources":["../../../src/components/Converters/XmlToJson.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { DefaultEditor } from '../DefaultEditor';\nimport { xml2json } from 'xml-js';\nimport { JsonSpaceSelector } from '../DefaultEditor/JsonSpaceSelector';\nimport { useToolboxTranslation } from '../../hooks';\n\nexport const XmlToJson = () => {\n  const [input, setInput] = React.useState('');\n  const [output, setOutput] = React.useState('');\n  const [spaces, setSpaces] = React.useState(4);\n  const { t } = useToolboxTranslation();\n\n  const sample =\n    '<elements><element id=\"123\"/><element id=\"325\" name=\"April\"/></elements>';\n\n  useEffect(() => {\n    try {\n      const json = xml2json(input);\n      const obj = JSON.parse(json);\n      setOutput(JSON.stringify(obj, null, spaces));\n    } catch (e) {\n      setOutput(`${t('tool.xml-to-json-convert.invalidFormat')}: ${e.message}`);\n    }\n  }, [input, spaces, t]);\n\n  return (\n    <DefaultEditor\n      input={input}\n      setInput={setInput}\n      output={output}\n      sample={sample}\n      allowFileUpload\n      inputLabel=\"XML\"\n      outputLabel=\"JSON\"\n      acceptFileTypes=\".xml\"\n      additionalTools={[\n        <JsonSpaceSelector spaces={spaces} onChange={setSpaces} />,\n      ]}\n      allowFileDownload\n      downloadFileName=\"download.json\"\n      downloadFileType=\"application/json\"\n    />\n  );\n};\n\nexport default XmlToJson;\n"],"names":[],"mappings":";;;;;;AAMO,MAAM,YAAY,MAAM;AAC7B,EAAA,MAAM,CAAC,KAAO,EAAA,QAAQ,CAAI,GAAA,KAAA,CAAM,SAAS,EAAE,CAAA,CAAA;AAC3C,EAAA,MAAM,CAAC,MAAQ,EAAA,SAAS,CAAI,GAAA,KAAA,CAAM,SAAS,EAAE,CAAA,CAAA;AAC7C,EAAA,MAAM,CAAC,MAAQ,EAAA,SAAS,CAAI,GAAA,KAAA,CAAM,SAAS,CAAC,CAAA,CAAA;AAC5C,EAAM,MAAA,EAAE,CAAE,EAAA,GAAI,qBAAsB,EAAA,CAAA;AAEpC,EAAA,MAAM,MACJ,GAAA,0EAAA,CAAA;AAEF,EAAA,SAAA,CAAU,MAAM;AACd,IAAI,IAAA;AACF,MAAM,MAAA,IAAA,GAAO,SAAS,KAAK,CAAA,CAAA;AAC3B,MAAM,MAAA,GAAA,GAAM,IAAK,CAAA,KAAA,CAAM,IAAI,CAAA,CAAA;AAC3B,MAAA,SAAA,CAAU,IAAK,CAAA,SAAA,CAAU,GAAK,EAAA,IAAA,EAAM,MAAM,CAAC,CAAA,CAAA;AAAA,aACpC,CAAG,EAAA;AACV,MAAA,SAAA,CAAU,GAAG,CAAE,CAAA,wCAAwC,CAAC,CAAK,EAAA,EAAA,CAAA,CAAE,OAAO,CAAE,CAAA,CAAA,CAAA;AAAA,KAC1E;AAAA,GACC,EAAA,CAAC,KAAO,EAAA,MAAA,EAAQ,CAAC,CAAC,CAAA,CAAA;AAErB,EACE,uBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,aAAA;AAAA,IAAA;AAAA,MACC,KAAA;AAAA,MACA,QAAA;AAAA,MACA,MAAA;AAAA,MACA,MAAA;AAAA,MACA,eAAe,EAAA,IAAA;AAAA,MACf,UAAW,EAAA,KAAA;AAAA,MACX,WAAY,EAAA,MAAA;AAAA,MACZ,eAAgB,EAAA,MAAA;AAAA,MAChB,eAAiB,EAAA;AAAA,wBACd,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,EAAkB,MAAgB,EAAA,QAAA,EAAU,SAAW,EAAA,CAAA;AAAA,OAC1D;AAAA,MACA,iBAAiB,EAAA,IAAA;AAAA,MACjB,gBAAiB,EAAA,eAAA;AAAA,MACjB,gBAAiB,EAAA,kBAAA;AAAA,KAAA;AAAA,GACnB,CAAA;AAEJ;;;;"}