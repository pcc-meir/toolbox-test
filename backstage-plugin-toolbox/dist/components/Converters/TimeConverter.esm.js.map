{"version":3,"file":"TimeConverter.esm.js","sources":["../../../src/components/Converters/TimeConverter.tsx"],"sourcesContent":["import { useStyles } from '../../utils/hooks';\nimport React from 'react';\nimport { DateTime } from 'luxon';\nimport {\n  ClearValueButton,\n  CopyToClipboardButton,\n  PasteFromClipboardButton,\n} from '../Buttons';\nimport TextField from '@mui/material/TextField';\nimport FormControl from '@mui/material/FormControl';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Select from '@mui/material/Select';\nimport Grid from '@mui/material/Grid';\nimport MenuItem from '@mui/material/MenuItem';\nimport Divider from '@mui/material/Divider';\nimport { useToolboxTranslation } from '../../hooks';\n\nexport const TimeConverter = () => {\n  const { classes } = useStyles();\n  const [input, setInput] = React.useState<DateTime | null>(null);\n  const [inputType, setInputType] = React.useState('unix');\n  const { t } = useToolboxTranslation();\n\n  const getInputStr = () => {\n    if (input === null) {\n      return '';\n    }\n\n    switch (inputType) {\n      default:\n      case 'unix':\n        return input?.toSeconds().toFixed(0).toString();\n      case 'iso8601':\n        return input.toISO();\n      case 'milliseconds':\n        return input.toMillis().toString(10);\n      case 'rfc2822':\n        return input.toRFC2822();\n      case 'http':\n        return input.toHTTP();\n      case 'sql':\n        return input.toSQL();\n    }\n  };\n\n  const handleChange = (value: string) => {\n    if (value.length === 0) {\n      setInput(null);\n      return;\n    }\n\n    switch (inputType) {\n      default:\n      case 'unix':\n        setInput(DateTime.fromSeconds(Number.parseInt(value, 10)));\n        break;\n      case 'iso8601':\n        setInput(DateTime.fromISO(value));\n        break;\n      case 'milliseconds':\n        setInput(DateTime.fromMillis(Number.parseInt(value, 10)));\n        break;\n      case 'rfc2822':\n        setInput(DateTime.fromRFC2822(value));\n        break;\n      case 'http':\n        setInput(DateTime.fromHTTP(value));\n        break;\n      case 'sql':\n        setInput(DateTime.fromSQL(value));\n        break;\n    }\n  };\n\n  const OutputField = (props: { label: string; value?: string | null }) => {\n    const { label, value } = props;\n    return (\n      <>\n        <TextField\n          label={label}\n          style={{ marginTop: '1rem' }}\n          className={classes.fullWidth}\n          disabled\n          value={value ?? ''}\n        />\n        <CopyToClipboardButton output={value ?? ''} />\n      </>\n    );\n  };\n\n  return (\n    <>\n      <FormControl className={classes.fullWidth}>\n        <Grid container>\n          <Grid item xs={12} lg={8}>\n            <Typography variant=\"subtitle1\">\n              <PasteFromClipboardButton setInput={v => handleChange(v)} />\n              <ClearValueButton setValue={() => handleChange('')} />\n              <Button\n                size=\"small\"\n                onClick={() => setInput(DateTime.now())}\n                color=\"inherit\"\n              >\n                {t('tool.time-convert.labelNow')}\n              </Button>\n            </Typography>\n            <TextField\n              className={classes.fullWidth}\n              id=\"input\"\n              name=\"input\"\n              label={t('tool.time-convert.labelInput')}\n              value={getInputStr()}\n              onChange={e => handleChange(e.target.value)}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={12} lg={4}>\n            <Typography variant=\"subtitle1\">\n              {t('tool.time-convert.inputType')}\n            </Typography>\n            <Select\n              value={inputType}\n              onChange={e => setInputType(e.target.value as string)}\n            >\n              <MenuItem value=\"unix\">\n                {t('tool.time-convert.unixTime')}\n              </MenuItem>\n              <MenuItem value=\"milliseconds\">\n                {t('tool.time-convert.millisecondsTime')}\n              </MenuItem>\n              <MenuItem value=\"iso8601\">ISO8601</MenuItem>\n              <MenuItem value=\"sql\">SQL</MenuItem>\n              <MenuItem value=\"rfc2822\">RFC2822</MenuItem>\n              <MenuItem value=\"http\">HTTP</MenuItem>\n            </Select>\n          </Grid>\n        </Grid>\n        <Divider style={{ marginTop: '1rem', marginBottom: '1rem' }} />\n        <Grid container>\n          <Grid item lg={5} md={8} xs={12}>\n            <OutputField\n              label={`${t('tool.time-convert.outputLabel.local')} (ISO8601)`}\n              value={input?.toLocal().toString()}\n            />\n            <OutputField\n              label=\"UTC (ISO8601)\"\n              value={input?.toUTC().toString()}\n            />\n            <OutputField label=\"Relative\" value={input?.toRelative()} />\n            <OutputField\n              label={t('tool.time-convert.outputLabel.unix')}\n              value={input?.toSeconds().toFixed(0).toString()}\n            />\n            <OutputField label=\"RFC2822\" value={input?.toRFC2822()} />\n            <OutputField label=\"HTTP\" value={input?.toHTTP()} />\n          </Grid>\n          <Grid item lg={2} md={4} xs={12}>\n            <OutputField\n              label={t('tool.time-convert.outputLabel.dayOfTheWeek')}\n              value={input?.toFormat('c')}\n            />\n            <OutputField\n              label={t('tool.time-convert.outputLabel.weekNumber')}\n              value={input?.toFormat('W')}\n            />\n            <OutputField\n              label={t('tool.time-convert.outputLabel.quarter')}\n              value={input?.toFormat('q')}\n            />\n            <OutputField\n              label={t('tool.time-convert.outputLabel.dayOfTheYear')}\n              value={input?.toFormat('o')}\n            />\n            <OutputField\n              label={t('tool.time-convert.outputLabel.leapYear')}\n              value={input?.isInLeapYear ? 'true' : 'false'}\n            />\n          </Grid>\n          <Grid item lg={5} md={12} xs={12}>\n            <OutputField\n              label={t('tool.time-convert.outputLabel.local')}\n              value={input?.toLocaleString(DateTime.DATETIME_FULL)}\n            />\n            <OutputField label=\"SQL\" value={input?.toSQL()} />\n            <OutputField\n              label=\"YYYY-MM-DD\"\n              value={input?.toFormat('yyyy-MM-dd')}\n            />\n            <OutputField\n              label=\"DD/MM/YYYY\"\n              value={input?.toFormat('dd/MM/yyyy')}\n            />\n            <OutputField\n              label={t('tool.time-convert.outputLabel.timezone')}\n              value={input?.toFormat('z')}\n            />\n          </Grid>\n        </Grid>\n      </FormControl>\n    </>\n  );\n};\n\nexport default TimeConverter;\n"],"names":[],"mappings":"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"}