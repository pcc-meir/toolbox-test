{"version":3,"file":"IbanValidator.esm.js","sources":["../../../src/components/Validators/IbanValidator.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport * as IBAN from 'iban';\nimport { DefaultEditor } from '../DefaultEditor';\nimport { OutputField } from '../DefaultEditor/OutputField';\nimport Alert from '@mui/material/Alert';\nimport AlertTitle from '@mui/material/AlertTitle';\nimport { useToolboxTranslation } from '../../hooks';\n\nexport const IbanValidator = () => {\n  const [input, setInput] = React.useState('');\n  const [bban, setBban] = React.useState('');\n  const [electronic, setElectronic] = React.useState('');\n  const [isValid, setIsValid] = React.useState(true);\n  const { t } = useToolboxTranslation();\n\n  useEffect(() => {\n    let valid: boolean;\n    try {\n      valid = IBAN.isValid(input);\n      setBban(IBAN.toBBAN(input));\n      setElectronic(IBAN.electronicFormat(input));\n    } catch (error) {\n      valid = false;\n    }\n    setIsValid(valid);\n  }, [input]);\n\n  return (\n    <DefaultEditor\n      input={input}\n      setInput={setInput}\n      minRows={1}\n      inputLabel=\"IBAN\"\n      rightContent={\n        <>\n          {!isValid && (\n            <Alert severity=\"error\">\n              <AlertTitle>{t('tool.iban.alertErrorTitle')}</AlertTitle>\n              {t('tool.iban.alertInvalidIBAN')}\n            </Alert>\n          )}\n          {isValid && (\n            <>\n              <OutputField label=\"BBAN\" value={bban} />\n              <OutputField label=\"Electronic\" value={electronic} />\n            </>\n          )}\n        </>\n      }\n      sample=\"BE68539007547034\"\n    />\n  );\n};\n\nexport default IbanValidator;\n"],"names":[],"mappings":";;;;;;;;AAQO,MAAM,gBAAgB,MAAM;AACjC,EAAA,MAAM,CAAC,KAAO,EAAA,QAAQ,CAAI,GAAA,KAAA,CAAM,SAAS,EAAE,CAAA,CAAA;AAC3C,EAAA,MAAM,CAAC,IAAM,EAAA,OAAO,CAAI,GAAA,KAAA,CAAM,SAAS,EAAE,CAAA,CAAA;AACzC,EAAA,MAAM,CAAC,UAAY,EAAA,aAAa,CAAI,GAAA,KAAA,CAAM,SAAS,EAAE,CAAA,CAAA;AACrD,EAAA,MAAM,CAAC,OAAS,EAAA,UAAU,CAAI,GAAA,KAAA,CAAM,SAAS,IAAI,CAAA,CAAA;AACjD,EAAM,MAAA,EAAE,CAAE,EAAA,GAAI,qBAAsB,EAAA,CAAA;AAEpC,EAAA,SAAA,CAAU,MAAM;AACd,IAAI,IAAA,KAAA,CAAA;AACJ,IAAI,IAAA;AACF,MAAQ,KAAA,GAAA,IAAA,CAAK,QAAQ,KAAK,CAAA,CAAA;AAC1B,MAAQ,OAAA,CAAA,IAAA,CAAK,MAAO,CAAA,KAAK,CAAC,CAAA,CAAA;AAC1B,MAAc,aAAA,CAAA,IAAA,CAAK,gBAAiB,CAAA,KAAK,CAAC,CAAA,CAAA;AAAA,aACnC,KAAO,EAAA;AACd,MAAQ,KAAA,GAAA,KAAA,CAAA;AAAA,KACV;AACA,IAAA,UAAA,CAAW,KAAK,CAAA,CAAA;AAAA,GAClB,EAAG,CAAC,KAAK,CAAC,CAAA,CAAA;AAEV,EACE,uBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,aAAA;AAAA,IAAA;AAAA,MACC,KAAA;AAAA,MACA,QAAA;AAAA,MACA,OAAS,EAAA,CAAA;AAAA,MACT,UAAW,EAAA,MAAA;AAAA,MACX,YACE,kBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACG,CAAC,OAAA,wCACC,KAAM,EAAA,EAAA,QAAA,EAAS,OACd,EAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,kBAAY,CAAE,CAAA,2BAA2B,CAAE,CAAA,EAC3C,EAAE,4BAA4B,CACjC,CAED,EAAA,OAAA,oBAEG,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,WAAY,EAAA,EAAA,KAAA,EAAM,QAAO,KAAO,EAAA,IAAA,EAAM,CACvC,kBAAA,KAAA,CAAA,aAAA,CAAC,eAAY,KAAM,EAAA,YAAA,EAAa,KAAO,EAAA,UAAA,EAAY,CACrD,CAEJ,CAAA;AAAA,MAEF,MAAO,EAAA,kBAAA;AAAA,KAAA;AAAA,GACT,CAAA;AAEJ;;;;"}