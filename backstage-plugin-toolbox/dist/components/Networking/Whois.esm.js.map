{"version":3,"file":"Whois.esm.js","sources":["../../../src/components/Networking/Whois.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { toolboxApiRef } from '../../api';\nimport { useStyles } from '../../utils/hooks';\nimport { Progress } from '@backstage/core-components';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { useToolboxTranslation } from '../../hooks';\n\nconst Whois = () => {\n  const [domain, setDomain] = useState('');\n  const [response, setResponse] = useState({});\n  const [loading, setLoading] = useState(false);\n  const toolboxApi = useApi(toolboxApiRef);\n  const { classes } = useStyles();\n  const { t } = useToolboxTranslation();\n\n  const lookup = () => {\n    setResponse({});\n    if (domain) {\n      setLoading(true);\n      toolboxApi\n        .toolJsonRequest('whois', {\n          domain,\n        })\n        .then((data: any) => {\n          setLoading(false);\n          setResponse(data);\n        });\n    }\n  };\n\n  return (\n    <>\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item>\n          <TextField\n            label={t('tool.whois.domainInput')}\n            variant=\"outlined\"\n            style={{ width: '20rem' }}\n            value={domain}\n            onChange={e => {\n              setDomain(e.target.value);\n            }}\n          />\n        </Grid>\n        <Grid item>\n          <Button variant=\"contained\" color=\"primary\" onClick={lookup}>\n            {t('tool.whois.lookupButton')}\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"outlined\"\n            onClick={() => {\n              setDomain('google.com');\n            }}\n          >\n            {t('tool.whois.exampleButton')}\n          </Button>\n        </Grid>\n      </Grid>\n      {loading && <Progress />}\n      {Object.keys(response).length > 0 && (\n        <Grid style={{ marginTop: '1rem' }}>\n          {Object.entries(response).map(([key, value]) => {\n            return (\n              <TextField\n                key={key}\n                label={key}\n                id=\"output\"\n                multiline\n                className={classes.fullWidth}\n                value={Object.entries(value as any)\n                  .map(([k, v]) => `${k}: ${v}`)\n                  .join('\\n')}\n                inputProps={{\n                  style: { resize: 'vertical' },\n                }}\n                style={{ marginBottom: '1rem' }}\n                minRows={30}\n                variant=\"outlined\"\n              />\n            );\n          })}\n        </Grid>\n      )}\n    </>\n  );\n};\n\nexport default Whois;\n"],"names":[],"mappings":"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"}