{"version":3,"file":"DefaultEditor.esm.js","sources":["../../../src/components/DefaultEditor/DefaultEditor.tsx"],"sourcesContent":["import React, { ReactElement } from 'react';\nimport { useStyles } from '../../utils/hooks';\nimport {\n  ClearValueButton,\n  CopyToClipboardButton,\n  FileUploadButton,\n  PasteFromClipboardButton,\n  SampleButton,\n} from '../Buttons';\nimport { FileDownloadButton } from '../Buttons/FileDownloadButton';\nimport Grid from '@mui/material/Grid';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport FormControl from '@mui/material/FormControl';\nimport { useToolboxTranslation } from '../../hooks';\n\ntype Props = {\n  input: string;\n  setInput: (value: string) => void;\n  output?: string;\n  mode?: string;\n  minRows?: number;\n  inputLabel?: string;\n  outputLabel?: string;\n  setMode?: (value: string) => void;\n  modes?: Array<string>;\n  leftContent?: ReactElement;\n  extraLeftContent?: ReactElement;\n  rightContent?: ReactElement;\n  extraRightContent?: ReactElement;\n  sample?: string;\n  additionalTools?: ReactElement[];\n  allowFileUpload?: boolean;\n  acceptFileTypes?: string;\n  allowFileDownload?: boolean;\n  downloadFileType?: string;\n  downloadFileName?: string;\n  inputProps?: any;\n  outputProps?: any;\n};\n\nexport const DefaultEditor = (props: Props) => {\n  const { t } = useToolboxTranslation();\n  const {\n    input,\n    setInput,\n    output,\n    inputLabel = t('components.defaultEditor.inputLabel'),\n    outputLabel = t('components.defaultEditor.outputLabel'),\n    mode,\n    setMode,\n    modes,\n    leftContent,\n    extraLeftContent,\n    rightContent,\n    extraRightContent,\n    sample,\n    additionalTools,\n    allowFileUpload,\n    acceptFileTypes,\n    allowFileDownload,\n    downloadFileName,\n    downloadFileType,\n    minRows = 20,\n  } = props;\n  const { classes } = useStyles();\n\n  const [fileName, setFileName] = React.useState(\n    downloadFileName ?? 'download.txt',\n  );\n  const [fileType, setFileType] = React.useState(\n    downloadFileType ?? 'text/plain',\n  );\n\n  const readFileAndSetInput = (file?: File) => {\n    if (!file) {\n      setInput('');\n      return;\n    }\n\n    setFileName(file.name);\n    setFileType(file.type);\n    const reader = new FileReader();\n    reader.onload = async e => {\n      // @ts-ignore\n      setInput(e.target.result);\n    };\n    reader.readAsText(file);\n  };\n\n  const handleDrop = (ev: React.DragEvent<HTMLDivElement>) => {\n    if (allowFileUpload !== true) {\n      return;\n    }\n    ev.preventDefault();\n    if (ev.dataTransfer.items) {\n      [...ev.dataTransfer.items].forEach(item => {\n        if (item.kind !== 'file') {\n          return;\n        }\n        const file = item.getAsFile();\n        if (file) {\n          readFileAndSetInput(file);\n        }\n      });\n    } else {\n      [...ev.dataTransfer.files].forEach(file => {\n        readFileAndSetInput(file);\n      });\n    }\n  };\n\n  return (\n    <FormControl className={classes.fullWidth} onDrop={handleDrop}>\n      <Grid container spacing={4} style={{ marginBottom: '5px' }}>\n        {modes && modes.length > 0 && (\n          <Grid item sx={{ pl: '16px', pt: '32px !important' }}>\n            <ButtonGroup\n              size=\"small\"\n              disableElevation\n              variant=\"contained\"\n              aria-label=\"Disabled elevation buttons\"\n              style={{ marginBottom: '1rem' }}\n              color=\"inherit\"\n            >\n              {modes.map(m => (\n                <Button\n                  size=\"small\"\n                  key={m}\n                  onClick={() => setMode && setMode(m)}\n                  variant={mode === m ? 'contained' : 'outlined'}\n                  color=\"inherit\"\n                  sx={{\n                    ...(mode === m && {\n                      color: '#000000',\n                      backgroundColor: '#E0E0E0',\n                    }),\n                    ...(mode !== m && {\n                      borderColor: '#E0E0E0',\n                    }),\n                  }}\n                >\n                  {t(`components.defaultEditor.mode.${m.toLowerCase()}`, {\n                    defaultValue: m,\n                  })}\n                </Button>\n              ))}\n            </ButtonGroup>\n          </Grid>\n        )}\n        <Grid item sx={{ p: '16px' }}>\n          <ButtonGroup size=\"small\">\n            <ClearValueButton setValue={setInput} />\n            <PasteFromClipboardButton setInput={setInput} />\n            {output && <CopyToClipboardButton output={output} />}\n            {sample && <SampleButton setInput={setInput} sample={sample} />}\n            {allowFileUpload && (\n              <FileUploadButton\n                accept={acceptFileTypes}\n                onFileLoad={readFileAndSetInput}\n              />\n            )}\n            {output && allowFileDownload && (\n              <FileDownloadButton\n                content={output}\n                fileName={fileName}\n                fileType={fileType}\n              />\n            )}\n          </ButtonGroup>\n        </Grid>\n        {additionalTools && additionalTools.length > 0 && (\n          <Grid item>{additionalTools.map(tool => tool)}</Grid>\n        )}\n      </Grid>\n      <Grid container>\n        <Grid\n          item\n          xs={12}\n          lg={6}\n          sx={{ pt: '8px !important', pl: '8px !important' }}\n        >\n          {leftContent ? (\n            leftContent\n          ) : (\n            <>\n              <TextField\n                label={inputLabel}\n                // eslint-disable-next-line\n                id=\"input\"\n                multiline\n                className={classes.fullWidth}\n                value={input}\n                onChange={e => setInput(e.target.value)}\n                minRows={minRows}\n                variant=\"outlined\"\n                sx={{\n                  p: '8px',\n                  '& label[class*=\"MuiFormLabel-root\"]': {\n                    paddingTop: '10px !important',\n                    paddingLeft: '10px !important',\n                  },\n                }}\n              />\n            </>\n          )}\n          {extraLeftContent}\n        </Grid>\n        <Grid item xs={12} lg={6} sx={{ p: '8px !important', mt: '8px' }}>\n          {rightContent ? (\n            rightContent\n          ) : (\n            <>\n              <TextField\n                id=\"output\"\n                label={outputLabel}\n                value={output || ''}\n                className={classes.fullWidth}\n                multiline\n                minRows={minRows}\n                variant=\"outlined\"\n              />\n            </>\n          )}\n          {extraRightContent}\n        </Grid>\n      </Grid>\n    </FormControl>\n  );\n};\n"],"names":[],"mappings":"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"}