{"version":3,"file":"ToolPage.esm.js","sources":["../../../src/components/Root/ToolPage.tsx"],"sourcesContent":["import React, { Suspense } from 'react';\nimport { ToolsPageProps } from './ToolsPage';\nimport { defaultTools } from './tools';\nimport { useParams } from 'react-router-dom';\nimport { ContentHeader } from '@backstage/core-components';\nimport { useStyles } from '../../utils/hooks';\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { useToolboxTranslation } from '../../hooks';\n\nexport const ToolPage = (props: ToolsPageProps) => {\n  const { extraTools } = props;\n  const params = useParams();\n  const { classes } = useStyles();\n  const { t } = useToolboxTranslation();\n\n  const allTools = [...(extraTools ?? []), ...defaultTools];\n  const tool = allTools.find(({ id }) => id === params.id);\n  if (!tool) {\n    return <>{t('toolPage.toolNotAvailable')}</>;\n  }\n\n  const title = `${t(\n    `tool.category.${(tool.category ?? 'miscellaneous').toLowerCase()}`,\n    {\n      defaultValue: tool.category ?? 'Miscellaneous',\n    },\n  )} - ${t(`tool.${tool.id}.name`, {\n    defaultValue: tool.name,\n  })}`;\n  const description = t(`tool.${tool.id}.description`, {\n    defaultValue: tool.description,\n  });\n\n  return (\n    <div id=\"toolContainer\" className={classes.toolContainer}>\n      <Suspense\n        fallback={\n          <Box\n            display=\"flex\"\n            width=\"100%\"\n            height=\"50%\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <CircularProgress />\n          </Box>\n        }\n      >\n        <ContentHeader title={title} description={description}>\n          {tool.headerButtons}\n        </ContentHeader>\n        {tool.component}\n      </Suspense>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;AAUa,MAAA,QAAA,GAAW,CAAC,KAA0B,KAAA;AACjD,EAAM,MAAA,EAAE,YAAe,GAAA,KAAA,CAAA;AACvB,EAAA,MAAM,SAAS,SAAU,EAAA,CAAA;AACzB,EAAM,MAAA,EAAE,OAAQ,EAAA,GAAI,SAAU,EAAA,CAAA;AAC9B,EAAM,MAAA,EAAE,CAAE,EAAA,GAAI,qBAAsB,EAAA,CAAA;AAEpC,EAAA,MAAM,WAAW,CAAC,GAAI,cAAc,EAAC,EAAI,GAAG,YAAY,CAAA,CAAA;AACxD,EAAM,MAAA,IAAA,GAAO,SAAS,IAAK,CAAA,CAAC,EAAE,EAAG,EAAA,KAAM,EAAO,KAAA,MAAA,CAAO,EAAE,CAAA,CAAA;AACvD,EAAA,IAAI,CAAC,IAAM,EAAA;AACT,IAAO,uBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAG,CAAE,CAAA,2BAA2B,CAAE,CAAA,CAAA;AAAA,GAC3C;AAEA,EAAA,MAAM,QAAQ,CAAG,EAAA,CAAA;AAAA,IACf,CAAkB,cAAA,EAAA,CAAA,IAAA,CAAK,QAAY,IAAA,eAAA,EAAiB,aAAa,CAAA,CAAA;AAAA,IACjE;AAAA,MACE,YAAA,EAAc,KAAK,QAAY,IAAA,eAAA;AAAA,KACjC;AAAA,GACD,CAAM,GAAA,EAAA,CAAA,CAAE,CAAQ,KAAA,EAAA,IAAA,CAAK,EAAE,CAAS,KAAA,CAAA,EAAA;AAAA,IAC/B,cAAc,IAAK,CAAA,IAAA;AAAA,GACpB,CAAC,CAAA,CAAA,CAAA;AACF,EAAA,MAAM,WAAc,GAAA,CAAA,CAAE,CAAQ,KAAA,EAAA,IAAA,CAAK,EAAE,CAAgB,YAAA,CAAA,EAAA;AAAA,IACnD,cAAc,IAAK,CAAA,WAAA;AAAA,GACpB,CAAA,CAAA;AAED,EAAA,2CACG,KAAI,EAAA,EAAA,EAAA,EAAG,eAAgB,EAAA,SAAA,EAAW,QAAQ,aACzC,EAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,QAAA;AAAA,IAAA;AAAA,MACC,QACE,kBAAA,KAAA,CAAA,aAAA;AAAA,QAAC,GAAA;AAAA,QAAA;AAAA,UACC,OAAQ,EAAA,MAAA;AAAA,UACR,KAAM,EAAA,MAAA;AAAA,UACN,MAAO,EAAA,KAAA;AAAA,UACP,UAAW,EAAA,QAAA;AAAA,UACX,cAAe,EAAA,QAAA;AAAA,SAAA;AAAA,4CAEd,gBAAiB,EAAA,IAAA,CAAA;AAAA,OACpB;AAAA,KAAA;AAAA,oBAGD,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA,EAAc,KAAc,EAAA,WAAA,EAAA,EAC1B,KAAK,aACR,CAAA;AAAA,IACC,IAAK,CAAA,SAAA;AAAA,GAEV,CAAA,CAAA;AAEJ;;;;"}